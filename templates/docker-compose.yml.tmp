version: "3.8"
services:

  traefik:
    container_name: traefik
    hostname: traefik
    image: traefik:v2.5
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=false
      - --log.level=DEBUG
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --serversTransport.insecureSkipVerify=true 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./vol/traefik/conf/:/etc/traefik/dynamic/
      - ./vol/traefik/certs/:/etc/certs/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web-secure"
      - "traefik.http.routers.api.rule=Host(`traefik.${BASE_DOMAIN}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.dashboard.entrypoints=web-secure"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      - "traefik.http.routers.api_http.entrypoints=web"
      - "traefik.http.routers.api_http.rule=Host(`traefik.${BASE_DOMAIN}`)"
      - "traefik.http.routers.api_http.middlewares=traefik-redirectscheme"
      - "traefik.http.middlewares.traefik-redirectscheme.redirectscheme.scheme=web-secure"


  cassandra:
    container_name: cassandra
    image: cassandra:3.11
    restart: unless-stopped
    hostname: cassandra
    environment:
      - MAX_HEAP_SIZE=1G
      - HEAP_NEWSIZE=1G
      - CASSANDRA_CLUSTER_NAME=thp
    volumes:
      - ./data/cassandra/data:/var/lib/cassandra/data


  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.11.1
    environment:
      - http.host=0.0.0.0
      - discovery.type=single-node
      - cluster.name=hive
      - script.allowed_types=inline
      - thread_pool.search.queue_size=100000
      - thread_pool.write.queue_size=10000
      - gateway.recover_after_nodes=1
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./data/elasticsearch/data:/usr/share/elasticsearch/data
      - ./data/elasticsearch/logs:/usr/share/elasticsearch/logs


  thehive:
    container_name: thehive
    image: 'thehiveproject/thehive4:latest'
    restart: unless-stopped
    depends_on:
      - cassandra
      - traefik
    # ports:
    #   - '0.0.0.0:9000:9000'
    volumes:
      - ./configs/thehive/application.conf:/etc/thehive/application.conf
      - ./data/thehive/data:/opt/data
      - ./data/thehive/index:/opt/index

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.thehive.entrypoints=web-secure"
      - "traefik.http.routers.thehive.rule=Host(`thehive.${BASE_DOMAIN}`)"
      - "traefik.http.routers.thehive.service=thehive"
      - "traefik.http.routers.thehive.tls=true"
      - "traefik.http.services.thehive.loadbalancer.server.port=9000"
      - "traefik.http.routers.thehive_http.entrypoints=web"
      - "traefik.http.routers.thehive_http.rule=Host(`thehive.${BASE_DOMAIN}`)"
      - "traefik.http.routers.thehive_http.middlewares=traefik-redirectscheme"
      - "traefik.http.middlewares.traefik-redirectscheme.redirectscheme.scheme=web-secure"


  cortex:
    container_name: cortex
    image: thehiveproject/cortex:latest
    depends_on:
      - elasticsearch
      - traefik
    command:
      --job-directory /opt/cortex/jobs
    environment:
      - 'JOB_DIRECTORY=/opt/cortex/jobs'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './data/cortex/application.conf:/etc/cortex/application.conf'
      - './data/cortex/jobs:/opt/cortex/jobs'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cortex.entrypoints=web-secure"
      - "traefik.http.routers.cortex.rule=Host(`cortex.${BASE_DOMAIN}`)"
      - "traefik.http.routers.cortex.service=cortex"
      - "traefik.http.routers.cortex.tls=true"
      - "traefik.http.services.cortex.loadbalancer.server.port=9001"
      - "traefik.http.routers.cortex_http.entrypoints=web"
      - "traefik.http.routers.cortex_http.rule=Host(`cortex.${BASE_DOMAIN}`)"
      - "traefik.http.routers.cortex_http.middlewares=traefik-redirectscheme"
      - "traefik.http.middlewares.traefik-redirectscheme.redirectscheme.scheme=web-secure"


  gostatic:
    container_name: gostatic 
    image: pierrezemb/gostatic:latest
    restart: "unless-stopped"
    expose:
      - "8043"
    volumes:
      - './data/gostatic:/srv/http'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gostatic.entrypoints=web-secure"
      - "traefik.http.routers.gostatic.rule=Host(`go.${BASE_DOMAIN}`)"
      - "traefik.http.routers.gostatic.service=gostatic"
      - "traefik.http.routers.gostatic.tls=true"
      - "traefik.http.services.gostatic.loadbalancer.server.port=8043"
      - "traefik.http.routers.gostatic_http.entrypoints=web"
      - "traefik.http.routers.gostatic_http.rule=Host(`go.${BASE_DOMAIN}`)"
      - "traefik.http.routers.gostatic_http.middlewares=traefik-redirectscheme"
      - "traefik.http.middlewares.traefik-redirectscheme.redirectscheme.scheme=web-secure"


  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./data/heimdall:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.entrypoints=web-secure"
      - "traefik.http.routers.heimdall.rule=Host(`links.${BASE_DOMAIN}`)"
      - "traefik.http.routers.heimdall.service=heimdall"
      - "traefik.http.routers.heimdall.tls=true"
      - "traefik.http.services.heimdall.loadbalancer.server.port=80"
      - "traefik.http.routers.heimdall_http.entrypoints=web"
      - "traefik.http.routers.heimdall_http.rule=Host(`links.${BASE_DOMAIN}`)"
      - "traefik.http.routers.heimdall_http.middlewares=traefik-redirectscheme"
      - "traefik.http.middlewares.traefik-redirectscheme.redirectscheme.scheme=web-secure"


  misp:
    image: coolacid/misp-docker:core-latest
    container_name: misp
    restart: unless-stopped
    depends_on:
      - redis
      - misp_mysql
    expose:
      - "80"
      - "443"
    environment:
      - "HOSTNAME=https://misp.${BASE_DOMAIN}"
      - "REDIS_FQDN=redis"
      - "INIT=true"             # Initialze MISP, things includes, attempting to import SQL and the Files DIR
      - "CRON_USER_ID=1"        # The MISP user ID to run cron jobs as
      - "DISIPV6=true" # Disable IPV6 in nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.misp.entrypoints=web-secure"
      - "traefik.http.routers.misp.rule=Host(`misp.${BASE_DOMAIN}`)"
      - "traefik.http.routers.misp.service=misp"
      - "traefik.http.routers.misp.tls=true"
      - "traefik.http.services.misp.loadbalancer.server.port=443"
      - "traefik.http.services.misp.loadbalancer.server.scheme=https"
      - "traefik.http.routers.misp_http.entrypoints=web"
      - "traefik.http.routers.misp_http.rule=Host(`misp.${BASE_DOMAIN}`)"
      - "traefik.http.routers.misp_http.middlewares=traefik-redirectscheme"
      - "traefik.http.middlewares.traefik-redirectscheme.redirectscheme.scheme=web-secure"


  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped


  misp_mysql:
    image: mysql:latest
    container_name: db
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - "MYSQL_USER=misp"
      - "MYSQL_PASSWORD=example"
      - "MYSQL_ROOT_PASSWORD=password"
      - "MYSQL_DATABASE=misp"
    volumes:
      - ./data/misp_mysql:/var/lib/mysql


  misp-modules:
    image: coolacid/misp-docker:modules-latest
    container_name: misp-modules
    environment:
      - "REDIS_BACKEND=redis"
    depends_on:
      - redis
      - misp_mysql


  frontend:
    image: ghcr.io/frikky/shuffle-frontend:0.8.64
    container_name: shuffle-frontend
    hostname: shuffle-frontend
    # expose:
    #   - "80"
    #   - "443"
    environment:
      - BACKEND_HOSTNAME=shuffle-backend
    restart: unless-stopped
    depends_on:
      - shuffle-backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shuffle.entrypoints=web-secure"
      - "traefik.http.routers.shuffle.rule=Host(`shuffle.${BASE_DOMAIN}`)"
      - "traefik.http.routers.shuffle.service=shuffle"
      - "traefik.http.routers.shuffle.tls=true"
      - "traefik.http.services.shuffle.loadbalancer.server.port=80"
      - "traefik.http.routers.shuffle_http.entrypoints=web"
      - "traefik.http.routers.shuffle_http.rule=Host(`shuffle.${BASE_DOMAIN}`)"
      - "traefik.http.routers.shuffle_http.middlewares=traefik-redirectscheme"
      - "traefik.http.middlewares.traefik-redirectscheme.redirectscheme.scheme=web-secure"


  shuffle-backend:
    image: ghcr.io/frikky/shuffle-backend:0.8.64
    container_name: shuffle-backend
    hostname: shuffle-backend
    expose:
      - "5001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/shuffle/shuffle-apps:/shuffle-apps
      - ./data/shuffle/shuffle-files:/shuffle-files
    environment:
      - DATASTORE_EMULATOR_HOST=shuffle-database:8000
      - SHUFFLE_APP_HOTLOAD_FOLDER=./shuffle-apps
      - SHUFFLE_FILE_LOCATION=./shuffle-files
      - ORG_ID=Shuffle
      - SHUFFLE_APP_DOWNLOAD_LOCATION=https://github.com/frikky/shuffle-apps
      - SHUFFLE_DEFAULT_USERNAME=admin
      - SHUFFLE_DEFAULT_PASSWORD=password
      - SHUFFLE_DEFAULT_APIKEY=mysecretkey
      - SHUFFLE_APP_FORCE_UPDATE=false
      - HTTP_PROXY=
      - HTTPS_PROXY=
    restart: unless-stopped
    depends_on:
      - shuffle-database


  orborus:
    image: ghcr.io/frikky/shuffle-orborus:0.8.63
    container_name: shuffle-orborus
    hostname: shuffle-orborus
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SHUFFLE_APP_SDK_VERSION=0.8.60
      - SHUFFLE_WORKER_VERSION=0.8.63
      - ORG_ID=Shuffle
      - ENVIRONMENT_NAME=Shuffle
      - BASE_URL=http://shuffle-backend:5001
      - DOCKER_API_VERSION=1.40
      - HTTP_PROXY=
      - HTTPS_PROXY=
      - SHUFFLE_PASS_WORKER_PROXY=False
      - SHUFFLE_ORBORUS_EXECUTION_TIMEOUT=600
      - SHUFFLE_BASE_IMAGE_NAME=frikky
      - SHUFFLE_BASE_IMAGE_REGISTRY=ghcr.io
      - SHUFFLE_BASE_IMAGE_TAG_SUFFIX="-0.8.60"
      - CLEANUP=false      
    restart: unless-stopped
  

  shuffle-database:
    image: frikky/shuffle:database
    container_name: shuffle-database
    hostname: shuffle-database
    restart: unless-stopped
    volumes:
      - ./data/shuffle/shuffle-database:/etc/shuffle


  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    restart: "unless-stopped"
    domainname: "${BASE_DOMAIN}"
    hostname: "ldap.${BASE_DOMAIN}"
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "Example Inc."
      LDAP_DOMAIN: "${BASE_DOMAIN}"
      LDAP_BASE_DN: "${LDAP_BASE_DN}"
      LDAP_ADMIN_PASSWORD: "${LDAP_ADMIN_PASSWORD}"
      LDAP_CONFIG_PASSWORD: "config"
      LDAP_READONLY_USER: "false"
      LDAP_READONLY_USER_USERNAME: "readonly"
      LDAP_READONLY_USER_PASSWORD: "readonly"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "try"
      LDAP_REPLICATION: "false"
      #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical"
      #LDAP_REPLICATION_DB_SYNCPROV: "binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1 starttls=critical"
      #docker-compose.ymlLDAP_REPLICATION_HOSTS: "#PYTHON2BASH:['ldap://ldap.XXXX.YYYY','ldap://ldap2.XXXX.YYYY']"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - ./data/openldap/ldap:/var/lib/ldap
      - ./data/openldap/slapd:/etc/ldap/slapd.d
      - ./data/openldap/certs:/container/service/slapd/assets/certs/
    ports:
      - "389:389"
      - "636:636"


  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    restart: "unless-stopped"
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    expose:
      - "80"
    depends_on:
      - openldap
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpldapadmin.entrypoints=web-secure"
      - "traefik.http.routers.phpldapadmin.rule=Host(`ldapadmin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.phpldapadmin.service=phpldapadmin"
      - "traefik.http.routers.phpldapadmin.tls=true"
      - "traefik.http.services.phpldapadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.phpldapadmin_http.entrypoints=web"
      - "traefik.http.routers.phpldapadmin_http.rule=Host(`ldapadmin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.phpldapadmin_http.middlewares=traefik-redirectscheme"
      - "traefik.http.middlewares.traefik-redirectscheme.redirectscheme.scheme=web-secure"


  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:latest
    container_name: rocketchat
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - ./data/rocketchat/uploads:/app/uploads
    environment:
      PORT: '3000'
      ROOT_URL: 'https://rc.${BASE_DOMAIN}'
      MONGO_URL: 'mongodb://rocketchat_mongo:27017/rocketchat'
      MONGO_OPLOG_URL: 'mongodb://rocketchat_mongo:27017/local'
      Accounts_UseDNSDomainCheck: 'False'
      ADMIN_USERNAME: 'rc_admin'
      ADMIN_EMAIL: 'rc_admin@${BASE_DOMAIN}'
      ADMIN_PASS: '${LDAP_ADMIN_PASSWORD}'
      OVERWRITE_SETTING_Show_Setup_Wizard: 'completed'
    depends_on:
      - rocketchat_mongo
    expose:
      - '3000'


  rocketchat_mongo:
    image: mongo:4.0
    container_name: rocketchat_mongo
    restart: unless-stopped
    volumes:
     - ./data/rocketchat/data/db:/data/db
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1


  self-service-password: 
    image: engelhardtm/docker-self-service-password:latest
    container_name: selfservicepassword
    restart: "unless-stopped"
    depends_on:
      - openldap
    expose:
      - '80'
    volumes:
      - ./configs/self-service-password/config.inc.php:/var/www/html/conf/config.inc.php
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.selfservicepassword.entrypoints=web-secure"
      - "traefik.http.routers.selfservicepassword.rule=Host(`pw.${BASE_DOMAIN}`)"
      - "traefik.http.routers.selfservicepassword.service=selfservicepassword"
      - "traefik.http.routers.selfservicepassword.tls=true"
      - "traefik.http.services.selfservicepassword.loadbalancer.server.port=80"
      - "traefik.http.routers.selfservicepassword_http.entrypoints=web"
      - "traefik.http.routers.selfservicepassword_http.rule=Host(`pw.${BASE_DOMAIN}`)"
      - "traefik.http.routers.selfservicepassword_http.middlewares=traefik-redirectscheme"
      - "traefik.http.middlewares.traefik-redirectscheme.redirectscheme.scheme=web-secure"